# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Keycodes
set $kc_1 10
set $kc_2 11
set $kc_3 12
set $kc_4 13
set $kc_5 14
set $kc_6 15
set $kc_7 16
set $kc_8 17
set $kc_9 18
set $kc_0 19

set $kc_a 38
set $kc_b 56
set $kc_c 54
set $kc_d 40
set $kc_e 26
set $kc_f 41
set $kc_m 58
set $kc_p 33
set $kc_q 24
set $kc_r 27
set $kc_s 39
set $kc_t 74
set $kc_v 55
set $kc_w 25
set $kc_x 53

set $kc_bracketleft 34
set $kc_bracketright 35
set $kc_escape 9
set $kc_return 36
set $kc_space 65
set $kc_semicolon 47

# Homerow navigate keys
# h
set $hr_left 43
# j
set $hr_down 44
# k
set $hr_up 45
# l
set $hr_right 46

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Roboto 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindcode $mod+$kc_return exec alacritty

# start console file manager
bindsym $mod+n exec alacritty -e nnn

# kill focused window
bindcode $mod+Shift+$kc_q kill

# start dmenu (a program launcher)
bindcode $mod+$kc_d exec rofi -show run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# start clipboard manager
bindcode $mod+$kc_semicolon exec rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'

# change focus
bindcode $mod+$hr_left focus left
bindcode $mod+$hr_down focus down
bindcode $mod+$hr_up focus up
bindcode $mod+$hr_right focus right

# move focused window
bindcode $mod+Shift+$hr_left move left
bindcode $mod+Shift+$hr_down move down
bindcode $mod+Shift+$hr_up move up
bindcode $mod+Shift+$hr_right move right

# chage split orientation
bindcode $mod+$kc_b split h
bindcode $mod+$kc_v split v

# enter fullscreen mode for the focused container
bindcode $mod+$kc_f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindcode $mod+$kc_s layout stacking
bindcode $mod+$kc_w layout tabbed
bindcode $mod+$kc_e layout toggle split

# toggle tiling / floating
bindcode $mod+Shift+$kc_space floating toggle

# change focus between tiling / floating windows
bindcode $mod+$kc_space focus mode_toggle

# focus the parent container
bindcode $mod+$kc_a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: Browser"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws0 "0: Messenger"


# program startup workspaces
assign [class="qutebrowser"] $ws1

# switch to workspace
bindcode $mod+$kc_1 workspace $ws1
bindcode $mod+$kc_2 workspace $ws2
bindcode $mod+$kc_3 workspace $ws3
bindcode $mod+$kc_4 workspace $ws4
bindcode $mod+$kc_5 workspace $ws5
bindcode $mod+$kc_6 workspace $ws6
bindcode $mod+$kc_7 workspace $ws7
bindcode $mod+$kc_8 workspace $ws8
bindcode $mod+$kc_9 workspace $ws9
bindcode $mod+$kc_0 workspace $ws0

# move focused container to workspace
bindcode $mod+Shift+$kc_1 move container to workspace $ws1
bindcode $mod+Shift+$kc_2 move container to workspace $ws2
bindcode $mod+Shift+$kc_3 move container to workspace $ws3
bindcode $mod+Shift+$kc_4 move container to workspace $ws4
bindcode $mod+Shift+$kc_5 move container to workspace $ws5
bindcode $mod+Shift+$kc_6 move container to workspace $ws6
bindcode $mod+Shift+$kc_7 move container to workspace $ws7
bindcode $mod+Shift+$kc_8 move container to workspace $ws8
bindcode $mod+Shift+$kc_9 move container to workspace $ws9
bindcode $mod+Shift+$kc_0 move container to workspace $ws0

# reload the configuration file
bindcode $mod+Shift+$kc_c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindcode $mod+Shift+$kc_r restart
# exit i3 (logs you out of your X session)
bindcode $mod+Shift+$kc_e exit

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindcode $hr_left resize shrink width 10 px or 10 ppt
        bindcode $hr_down resize grow height 10 px or 10 ppt
        bindcode $hr_up resize shrink height 10 px or 10 ppt
        bindcode $hr_right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindcode $kc_return mode "default"
        bindcode $kc_escape mode "default"
        bindcode $mod+$kc_r mode "default"
}

bindcode $mod+$kc_t mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3blocks -c ~/.config/i3blocks/config
}

# Switch keyboard layout
bindcode $mod+$kc_p exec setxkbmap us; exec pkill -RTMIN+10 i3blocks
bindcode $mod+$kc_bracketleft exec setxkbmap ua -variant winkeys; exec pkill -RTMIN+10 i3blocks
bindcode $mod+$kc_bracketright exec setxkbmap ru; exec pkill -RTMIN+10 i3blocks

exec_always --no-startup-id xset s 300
exec_always --no-startup-id xset dpms 300
exec_always --no-startup-id xss-lock ~/bin/lock.sh

# Lock hotkey
bindcode $mod+shift+$kc_x exec "setxkbmap us & pkill -RTMIN+10 i3blocks & i3lock-fancy -p"
# Startup programs
exec qutebrowser
